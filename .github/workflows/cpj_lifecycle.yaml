name: CPJ Lifecycle

on:
  workflow_dispatch:
    inputs:

      labName:
        description: The name of the lab (defaults to mva)
        required: false

      labNumberParticipants:
        description: The number of participants in the lab (defaults to 20)
        required: false

      nodeCount:
        description: The number of nodes to create (defaults to 3)
        required: false

      choice:
        required: true
        type: choice
        description: The stages to run (defaults to provision)
        options:
          - "provision"
          - "destroy"

      destroy:
        description: Destroy the lab? (defaults to false)
        type: boolean
        required: false


jobs:
  terraform:

    runs-on: ubuntu-latest

    env:
      TF_VAR_labname: ${{ github.event.inputs.labName || 'mva' }}
      TF_VAR_labNumberParticipants: ${{ github.event.inputs.labNumberParticipants || '20' }}
      TF_VAR_nodecount: ${{ github.event.inputs.nodeCount || '3'}}

      TF_VAR_vmSizeAks: 'Standard_E8_v3'
      TF_VAR_rsgcommon: 'cloudacademy-common'
      TF_VAR_location: 'westeurope'
      TF_VAR_sshUserPw: 'CPJSchulung2022'
      
      TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_STATE_BLOBACCESSKEY: ${{ secrets.STATE_BLOBACCESSKEY }}
      TF_VAR_STATE_SAACCOUNTNAME: 'cloudacademyiacstate'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Terraform plan
        if: "${{ github.event.inputs.choice == 'provision' && github.event.inputs.destroy == 'false' }}"
        env:
          TF_ACTION: 'plan'
        run: |
          #!/bin/bash
          set -xe

          docker run \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
                init \
                    -backend-config="key=${{ env.TF_VAR_labname }}-components.tfstate" \
                    -backend-config="access_key=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
                    -backend-config=storage_account_name="${{ env.TF_VAR_STATE_SAACCOUNTNAME }}"
          
          docker run \
            -e "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_ARM_SUBSCRIPTION_ID }}" \
            -e "ARM_CLIENT_ID=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "ARM_CLIENT_SECRET=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "ARM_TENANT_ID=${{ env.TF_VAR_ARM_TENANT_ID }}" \
            -e "STATE_BLOBACCESSKEY=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
            -e "TF_VAR_labname=${{ env.TF_VAR_labname }}" \
            -e "TF_VAR_location=${{ env.TF_VAR_location }}" \
            -e "TF_VAR_labNumberParticipants=${{ env.TF_VAR_labNumberParticipants }}" \
            -e "TF_VAR_vmSizeAks=${{ env.TF_VAR_vmSizeAks }}" \
            -e "TF_VAR_nodecount=${{ env.TF_VAR_nodecount }}" \
            -e "TF_VAR_clientid=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "TF_VAR_clientsecret=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "TF_VAR_rsgcommon=${{ env.TF_VAR_rsgcommon }}" \
            -e "TF_VAR_sshUserPw=${{ env.TF_VAR_sshUserPw }}" \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
              ${{ env.TF_ACTION }} \
        working-directory: 'infrastructureAsCode'

      - name: Terraform apply
        if: "${{ github.event.inputs.choice == 'provision' && github.event.inputs.destroy == 'false' }}"
        env:
          TF_ACTION: 'apply'
          TF_OPTIONS: '--auto-approve'
        run: |
          #!/bin/bash
          set -xe

          docker run \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
                init \
                    -backend-config="key=${{ env.TF_VAR_labname }}-components.tfstate" \
                    -backend-config="access_key=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
                    -backend-config=storage_account_name="${{ env.TF_VAR_STATE_SAACCOUNTNAME }}"
          
          docker run \
            -e "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_ARM_SUBSCRIPTION_ID }}" \
            -e "ARM_CLIENT_ID=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "ARM_CLIENT_SECRET=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "ARM_TENANT_ID=${{ env.TF_VAR_ARM_TENANT_ID }}" \
            -e "STATE_BLOBACCESSKEY=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
            -e "TF_VAR_labname=${{ env.TF_VAR_labname }}" \
            -e "TF_VAR_location=${{ env.TF_VAR_location }}" \
            -e "TF_VAR_labNumberParticipants=${{ env.TF_VAR_labNumberParticipants }}" \
            -e "TF_VAR_vmSizeAks=${{ env.TF_VAR_vmSizeAks }}" \
            -e "TF_VAR_nodecount=${{ env.TF_VAR_nodecount }}" \
            -e "TF_VAR_clientid=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "TF_VAR_clientsecret=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "TF_VAR_rsgcommon=${{ env.TF_VAR_rsgcommon }}" \
            -e "TF_VAR_sshUserPw=${{ env.TF_VAR_sshUserPw }}" \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
              ${{ env.TF_ACTION }} \
              ${{ env.TF_OPTIONS }}
        working-directory: 'infrastructureAsCode'

      - name: Terraform destroy
        if: "${{ github.event.inputs.choice == 'destroy' && github.event.inputs.destroy == 'true' }}"
        env:
          TF_ACTION: 'destroy'
          TF_OPTIONS: '--auto-approve'
        run: |
          #!/bin/bash
          set -xe

          docker run \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
                init \
                    -backend-config="key=${{ env.TF_VAR_labname }}-components.tfstate" \
                    -backend-config="access_key=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
                    -backend-config=storage_account_name="${{ env.TF_VAR_STATE_SAACCOUNTNAME }}"
          
          docker run \
            -e "ARM_SUBSCRIPTION_ID=${{ env.TF_VAR_ARM_SUBSCRIPTION_ID }}" \
            -e "ARM_CLIENT_ID=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "ARM_CLIENT_SECRET=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "ARM_TENANT_ID=${{ env.TF_VAR_ARM_TENANT_ID }}" \
            -e "STATE_BLOBACCESSKEY=${{ env.TF_VAR_STATE_BLOBACCESSKEY }}" \
            -e "TF_VAR_labname=${{ env.TF_VAR_labname }}" \
            -e "TF_VAR_location=${{ env.TF_VAR_location }}" \
            -e "TF_VAR_labNumberParticipants=${{ env.TF_VAR_labNumberParticipants }}" \
            -e "TF_VAR_vmSizeAks=${{ env.TF_VAR_vmSizeAks }}" \
            -e "TF_VAR_nodecount=${{ env.TF_VAR_nodecount }}" \
            -e "TF_VAR_clientid=${{ env.TF_VAR_ARM_CLIENT_ID }}" \
            -e "TF_VAR_clientsecret=${{ env.TF_VAR_ARM_CLIENT_SECRET }}" \
            -e "TF_VAR_rsgcommon=${{ env.TF_VAR_rsgcommon }}" \
            -e "TF_VAR_sshUserPw=${{ env.TF_VAR_sshUserPw }}" \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
              ${{ env.TF_ACTION }} \
              ${{ env.TF_OPTIONS }}
        working-directory: 'infrastructureAsCode'