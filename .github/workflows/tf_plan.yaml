name: Terraform plan

on:
  workflow_dispatch:
    inputs:

      labName:
        description: The name of the lab
        required: true
        default: "mva"

      labNumberParticipants:
        description: The number of participants in the lab
        required: true
        default: "20"

      nodeCount:
        description: The number of nodes to create
        required: true
        default: "3"

      vmSizeAks:
        description: The size of the AKS VM
        required: true
        default: "Standard_E8_v3"

  # push:
  #   branches:
  #     - main
  #     - actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Terraform plan
        env:
          TF_ACTION: 'plan' #${{ github.event.inputs.tfAction }}

          TF_VAR_labname: ${{ github.event.inputs.labName }}
          TF_VAR_location: ${{ secrets.LOCATION }}
          TF_VAR_labNumberParticipants: ${{ github.event.inputs.labNumberParticipants }}
          TF_VAR_vmSizeAks: ${{ github.event.inputs.vmSizeAks }}
          TF_VAR_nodecount: ${{ github.event.inputs.nodeCount }}
          TF_VAR_clientid: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_clientsecret: ${secrets.ARM_CLIENT_SECRET }}
          TF_VAR_rsgcommon: ${{ secrets.RSGCOMMON }}
          
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          STATE_BLOBACCESSKEY: ${{ secrets.STATE_BLOBACCESSKEY }}
          STATE_SAACCOUNTNAME: ${{ secrets.STATE_SAACCOUNTNAME }}

          ZIPPASS: ${{ secrets.ZIPPASS }}
          SSHUSERPW: ${{ secrets.SSHUSERPW }}
          RSGCOMMON: ${{ secrets.RSGCOMMON }}
          LOCATION: ${{ secrets.LOCATION }}
          LABNAMEINVENTORYSTORAGEACCOUNT: ${{ secrets.LABNAMEINVENTORYSTORAGEACCOUNT }}
          HUGOVERSION: ${{ secrets.HUGOVERSION }}

        run: |
          #!/bin/bash
          set -xe

          docker run \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
                init \
                    -backend-config="key=${{ env.TF_VAR_labname }}-components.tfstate" \
                    -backend-config="access_key=${{ env.STATE_BLOBACCESSKEY }}" \
                    -backend-config=storage_account_name="${{ env.STATE_SAACCOUNTNAME }}"

          docker run \
            -e TF_VAR_labname=${{ env.TF_VAR_labname }} \
            -e TF_VAR_location=${{ env.TF_VAR_location }} \
            -e TF_VAR_labNumberParticipants=${{ env.TF_VAR_labNumberParticipants }} \
            -e TF_VAR_vmSizeAks=${{ env.TF_VAR_vmSizeAks }} \
            -e TF_VAR_nodecount=${{ env.TF_VAR_nodecount }} \
            -e TF_VAR_clientid=${{ env.ARM_CLIENT_ID }} \
            -e TF_VAR_clientsecret=${{ env.ARM_CLIENT_SECRET }} \        
            -e TF_VAR_rsgcommon=${{ env.RSGCOMMON }} \
            -e TF_VAR_sshUserPW=${{ env.SSHUSERPW }} \
            -v "$(pwd)"/:/workspace \
            -w /workspace \
            hashicorp/terraform:latest \
                $TF_ACTION \
                $TF_OPTIONS
        working-directory: 'infrastructureAsCode'